{"version":3,"file":"component---src-pages-404-jsx-119813bb3f09bd096c6b.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Head/NotFoundPageHead.jsx","webpack://headless-gatsby-multilang/./src/pages/404.jsx","webpack://headless-gatsby-multilang/./src/functions/getPreferredLocale.js"],"sourcesContent":["import { Helmet } from 'react-helmet';\r\n\r\nimport { isRtlLang } from '../../functions/localeUtils';\r\n\r\nexport const NotFoundPageHead = ({ locale, title }) => {\r\n  const isRtl = isRtlLang(locale);\r\n\r\n  return (\r\n    <Helmet>\r\n      <html lang={locale} dir={isRtl ? 'rtl' : 'ltr'} />\r\n      <link rel=\"icon\" href=\"/favicon-32.png\" type=\"image/png\" />\r\n      <title>{title}</title>\r\n    </Helmet>\r\n  );\r\n};\r\n","import { graphql, Link, useStaticQuery } from 'gatsby';\r\n\r\nimport { Hero } from '../components/Layout/Hero';\r\nimport {\r\n  storeLocale,\r\n  getStoredLocale,\r\n  getSecondaryLangs,\r\n  findSecondaryLang,\r\n  isDefaultStored,\r\n  isSecondaryStored,\r\n} from '../functions/localeUtils';\r\nimport { getPreferredLocale } from '../functions/getPreferredLocale';\r\nimport { isSSR } from '../functions/isSSR';\r\nimport { NotFoundPageHead } from '../components/Head/NotFoundPageHead';\r\nimport { useLocales } from '../hooks/useLocales';\r\n\r\nimport { Builder, BuilderComponent } from '@builder.io/react';\r\n\r\nconst NotFoundPage = () => {\r\n\r\n  if (Builder.isPreviewing || Builder.isEditing) {\r\n    return <BuilderComponent model=\"page\" />\r\n }\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allDatoCmsNotFoundPage {\r\n        nodes {\r\n          seo {\r\n            seoTitle: title\r\n          }\r\n          title\r\n          subtitle\r\n          backToHomeText\r\n          locale\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const { defaultLocale, locales } = useLocales();\r\n\r\n  const appLangCodes = [...locales];\r\n  const storedLocale = getStoredLocale();\r\n\r\n  if (!isSSR) {\r\n    const browserLangCodes = navigator.languages;\r\n    const {\r\n      allDatoCmsNotFoundPage: { nodes: propNodes },\r\n    } = data;\r\n\r\n    const [defaultLangPropsNode] = propNodes;\r\n\r\n    // Default locale data\r\n\r\n    const {\r\n      seo: { seoTitle },\r\n      title,\r\n      subtitle,\r\n      backToHomeText,\r\n    } = defaultLangPropsNode;\r\n\r\n    const defaultLangProps = {\r\n      headProps: {\r\n        title: seoTitle,\r\n        locale: defaultLocale,\r\n      },\r\n      heroProps: {\r\n        title,\r\n        subtitle,\r\n      },\r\n      linkProps: {\r\n        children: backToHomeText,\r\n        to: '/',\r\n      },\r\n    };\r\n\r\n    const getProps = () => {\r\n      // If default locale is already stored\r\n\r\n      const isDefaultLangStored = isDefaultStored(\r\n        appLangCodes,\r\n        storedLocale,\r\n        defaultLocale\r\n      );\r\n\r\n      if (isDefaultLangStored) return defaultLangProps;\r\n\r\n      // If secondary locale is already stored\r\n\r\n      const isSecondaryLangStored = isSecondaryStored(\r\n        appLangCodes,\r\n        storedLocale,\r\n        defaultLocale\r\n      );\r\n\r\n      if (isSecondaryLangStored) {\r\n        const storedLangProps = propNodes.find(\r\n          ({ locale }) => locale === storedLocale\r\n        );\r\n\r\n        return {\r\n          headProps: {\r\n            title: storedLangProps.seo.seoTitle,\r\n            locale: storedLocale,\r\n          },\r\n          heroProps: {\r\n            title: storedLangProps.title,\r\n            subtitle: storedLangProps.subtitle,\r\n          },\r\n          linkProps: {\r\n            children: storedLangProps.backToHomeText,\r\n            to: `/${storedLocale}`,\r\n          },\r\n        };\r\n      }\r\n\r\n      /**\r\n       * If no locale has been stored previously (e.g. first time visit), evaluate\r\n       * the preferred locale according to browser language list\r\n       */\r\n\r\n      const matchingLangCode = getPreferredLocale(\r\n        browserLangCodes,\r\n        appLangCodes\r\n      );\r\n\r\n      const defaultLocaleMatch = matchingLangCode === defaultLocale;\r\n\r\n      // If it equals to default language\r\n\r\n      if (!storedLocale && defaultLocaleMatch) {\r\n        storeLocale(defaultLocale);\r\n        return defaultLangProps;\r\n      }\r\n\r\n      // If it equals to secondary langauge\r\n\r\n      const secondaryLanguages = getSecondaryLangs(appLangCodes);\r\n      const secondaryLanguageMatch = findSecondaryLang(\r\n        secondaryLanguages,\r\n        matchingLangCode\r\n      );\r\n      if (!storedLocale && secondaryLanguageMatch) {\r\n        storeLocale(secondaryLanguageMatch);\r\n        const secondaryLangProps = propNodes.find(\r\n          ({ locale }) => locale === secondaryLanguageMatch\r\n        );\r\n        return {\r\n          headProps: {\r\n            title: secondaryLangProps.seo.seotitle,\r\n            locale: secondaryLanguageMatch,\r\n          },\r\n          heroProps: {\r\n            title: secondaryLangProps.title,\r\n            subtitle: secondaryLangProps.subtitle,\r\n          },\r\n          linkProps: {\r\n            children: secondaryLangProps.backToHomeText,\r\n            to: `/${secondaryLanguageMatch}`,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Else return default locale data\r\n\r\n      return defaultLangProps;\r\n    };\r\n\r\n    const { headProps, heroProps, linkProps } = getProps();\r\n\r\n    return (\r\n      <>\r\n        <NotFoundPageHead {...headProps} />\r\n        <Hero\r\n          {...heroProps}\r\n          isFullViewport\r\n          button={\r\n            <Link\r\n              {...linkProps}\r\n              className=\"classicButton classicButtonOutline\"\r\n            />\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { getLangCode } from './localeUtils';\r\n\r\nexport const getPreferredLocale = (browserLangCodes, appLangCodes) => {\r\n  if (browserLangCodes.length < 1 || appLangCodes.length < 1) {\r\n    throw new Error('Unable to retrieve language codes.');\r\n  }\r\n\r\n  let matchingLangCode;\r\n\r\n  browserLangCodes.some((browserLang) => {\r\n    const findIetfLangCode = appLangCodes.find(\r\n      (appLangCode) => appLangCode === browserLang\r\n    );\r\n    if (typeof findIetfLangCode === 'string') {\r\n      matchingLangCode = findIetfLangCode;\r\n    } else if (!findIetfLangCode) {\r\n      const findFullLangCode = appLangCodes.find(\r\n        (appLangCode) => getLangCode(appLangCode) === getLangCode(browserLang)\r\n      );\r\n      if (typeof findFullLangCode === 'string') {\r\n        matchingLangCode = findFullLangCode;\r\n      }\r\n    }\r\n\r\n    return typeof matchingLangCode === 'string';\r\n  });\r\n\r\n  return matchingLangCode;\r\n};\r\n"],"names":["NotFoundPageHead","_ref","locale","title","isRtl","isRtlLang","_jsxs","Helmet","children","_jsx","lang","dir","rel","href","type","Builder","isPreviewing","isEditing","BuilderComponent","model","data","useStaticQuery","_useLocales","useLocales","defaultLocale","locales","appLangCodes","_toConsumableArray","storedLocale","getStoredLocale","isSSR","browserLangCodes","navigator","languages","propNodes","allDatoCmsNotFoundPage","nodes","defaultLangPropsNode","seoTitle","seo","subtitle","backToHomeText","defaultLangProps","headProps","heroProps","linkProps","to","_getProps","isDefaultStored","isSecondaryStored","storedLangProps","find","matchingLangCode","length","Error","some","browserLang","findIetfLangCode","appLangCode","findFullLangCode","getLangCode","getPreferredLocale","storeLocale","secondaryLanguages","getSecondaryLangs","secondaryLanguageMatch","findSecondaryLang","secondaryLangProps","_ref2","seotitle","getProps","_Fragment","Object","assign","Hero","isFullViewport","button","Link","className"],"sourceRoot":""}