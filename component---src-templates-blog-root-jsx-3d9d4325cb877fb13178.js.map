{"version":3,"file":"component---src-templates-blog-root-jsx-3d9d4325cb877fb13178.js","mappings":"iNAiBaA,EAAc,SAAHC,GAWjB,IAVLC,EAAQD,EAARC,SACAC,EAAIF,EAAJE,KACAC,EAAKH,EAALG,MACAC,EAAOJ,EAAPI,QACAC,EAASL,EAATK,UACAC,EAAUN,EAAVM,WACAC,EAAQP,EAARO,SACAC,EAAOR,EAAPQ,QACAC,EAAaT,EAAbS,cACAC,EAAMV,EAANU,OAEMC,GAASC,EAAAA,EAAAA,IAAoBJ,EAASC,GAEpCI,GAAkBC,EAAAA,EAAAA,GAAiBZ,GAAnCW,cAER,OACEE,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAQ,CAACjB,SAAUA,EAASe,SAAA,EAC3BD,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,CAAAH,UACfD,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,UAAU,QAAQC,MAAOX,EAAQY,IAAKb,GAAU,QAE3DO,EAAAA,EAAAA,MAACO,EAAAA,GAAc,CAAAR,SAAA,CACZT,IAAYQ,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CAAAT,SAAET,EAASJ,SACpCY,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAAAV,SAAEH,KACPE,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAAAX,SAAEb,KACZY,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CAAAZ,SAAEZ,KACVW,EAAAA,EAAAA,KAACc,EAAAA,GAAkB,CAAAb,UACjBC,EAAAA,EAAAA,MAACa,EAAAA,GAAe,CAAAd,SAAA,EACdD,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CACRV,UAAU,QACVC,MAAOjB,GAAa,GACpBkB,IAAKjB,GAAc,MAErBS,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACM,GAAG,UAAShB,SAAEV,gBAOlC,C,mHCtDM2B,EAAU,gDAEVC,EAAUC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAVJ,CAAU,2IAOpBK,EAAYL,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,8NAGZF,EACGA,GAWb,SAAAjC,GAAQ,OAAAA,EAALyC,OAECC,EAAAA,EAAAA,KAAG,qHAQHA,EAAAA,EAAAA,KAAG,qHAOF,IAILC,EAAMR,EAAAA,QAAOS,IAAGP,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAAVJ,CAAU,yeAyBhBU,EAAUV,EAAAA,QAAOW,GAAET,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAATJ,CAAS,oHAWnBY,GAAeZ,EAAAA,EAAAA,SAAOa,EAAAA,GAAUX,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAjBJ,CAAiB,+I,WC9EzBc,EAAiB,WAC5B,IAawBC,GAbXC,EAAAA,EAAAA,IAAe,aAa1BC,mBAAsBF,cAGhBG,GAAeC,EAAAA,EAAAA,KAAfD,WACAZ,GAAUc,EAAAA,EAAAA,KAAVd,MAER,OACE1B,EAAAA,EAAAA,KAACmB,EAAO,CAAAlB,UACND,EAAAA,EAAAA,KAACyB,EAAS,CAACC,MAAOA,EAAMzB,UACtBD,EAAAA,EAAAA,KAAC4B,EAAG,CAAA3B,UACFD,EAAAA,EAAAA,KAAC8B,EAAO,CAAA7B,SACLkC,EACEM,QAAO,SAAAxD,GAAS,OAAAA,EAANyD,SAAwBJ,CAAU,IAC5CK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIzD,EAAKwD,EAALxD,MAAK,OACfY,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACgC,EAAY,CAAC9C,SAAU2D,EAAIC,gBAAgB,kBAAiB7C,SAC1Db,KAFIA,EAIJ,WAOrB,C,uEC5CM+B,EAAUC,EAAAA,QAAO2B,QAAOzB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAdJ,CAAc,6KAS1B,SAAAnC,GAAiB,OAAAA,EAAd+D,iBAEHrB,EAAAA,EAAAA,KAAG,yFAQF,IAGCsB,EAAU7B,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAVJ,CAAU,2IAYpB8B,EAAU9B,EAAAA,QAAO+B,GAAE7B,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAATJ,CAAS,4JASnBgC,EAAQhC,EAAAA,QAAOiC,GAAE/B,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAATJ,CAAS,wJAUjBkC,EAAWlC,EAAAA,QAAOmC,EAACjC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAARJ,CAAQ,2F,WCrDZoC,EAAO,SAAHvE,GAAA,IACfwE,EAAOxE,EAAPwE,QACArE,EAAKH,EAALG,MACAsE,EAAQzE,EAARyE,SACAC,EAAM1E,EAAN0E,OACAC,EAAe3E,EAAf2E,gBACAZ,EAAc/D,EAAd+D,eAAc,OAEd9C,EAAAA,EAAAA,MAACiB,EAAO,CAAC6B,eAAgBA,EAAe/C,SAAA,EACtCC,EAAAA,EAAAA,MAAC+C,EAAO,CAAAhD,SAAA,CACLwD,IAAWzD,EAAAA,EAAAA,KAACkD,EAAO,CAAAjD,SAAEwD,KACtBzD,EAAAA,EAAAA,KAACoD,EAAK,CAAAnD,SAAEb,KACRY,EAAAA,EAAAA,KAACsD,EAAQ,CAAArD,SAAEyD,IACVC,KAEFC,IACO,C,+EClBZ,IAAMC,EAAc,CAClBC,KAAM,UACNC,OAAQ,WAGJC,EAAc,CAClBC,KAAM,UACNC,MAAO,QACPC,IAAK,WAGDC,EAAiB,SAACC,EAAYC,GAAa,OAC/C,IAAI3D,KAAK0D,GAAYE,eAAeD,EAAaE,OAAAC,OAAA,GAC5CT,EACAH,GACF,EAECa,EAAa,SAACL,EAAYC,GAAa,OAC3C,IAAI3D,KAAK0D,GAAYE,eAAeD,EAAaE,OAAAC,OAAA,GAC5CT,GACF,C,6FCfQjE,EAAmB,SAACsE,GAC/B,IAAQ/B,GAAeqC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BtC,WAIR,MAAO,CAAExC,eAFa4E,EAAAA,EAAAA,GAAWL,EAAY/B,GAG/C,C,qGCsCA,UAzCyB,SAAHrD,GAAA,IAAA4F,EAAAC,EAAA7F,EACpB8F,KAAIC,EAAAF,EACFG,gBACMC,EADSF,EACbG,KAAI,GAAKC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aACpBC,EAAGN,EAAHM,IAEoBC,EAAaT,EAAnCU,mBAAsBD,cAExBE,EAAWxG,EAAXwG,YAAW,OAEXvF,EAAAA,EAAAA,MAACwF,EAAAA,EAAW,CACVC,SAAUF,EACVG,SAAUN,aAAG,EAAHA,EAAKM,SACfC,eAAgBP,aAAG,EAAHA,EAAKO,eACrBC,SAAUR,SAAa,QAAVT,EAAHS,EAAKQ,gBAAQ,IAAAjB,OAAV,EAAHA,EAAekB,YACzBT,KAAG,EAAArF,SAAA,EAEHD,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACpE,MAAOgG,EAAW1B,SAAU2B,KAClCrF,EAAAA,EAAAA,KAACkC,EAAAA,EAAc,KACflC,EAAAA,EAAAA,KAACgG,EAAAA,GAAoB,CAAA/F,SAClBsF,EAAc5C,KACb,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAYoD,EAASrD,EAAjBsD,KAAQD,UAAaE,EAAUvD,EAAVuD,WAAY/G,EAAKwD,EAALxD,MAAOsE,EAAQd,EAARc,SAAU0C,EAAMxD,EAANwD,OAAM,OAC7DpG,EAAAA,EAAAA,KAAChB,EAAAA,EAAW,CAEVE,SAAU2D,EACV1D,KAAM8G,EACNxG,QAAS0G,EAAWE,gBACpB3G,cAAeyG,EAAWG,aAC1B3G,OAAQP,EACRA,MAAOA,EACPC,QAASqE,EACTpE,UAAW8G,aAAM,EAANA,EAAQG,QAAQF,gBAC3BG,aAAcJ,aAAM,EAANA,EAAQ7G,WACtBA,WAAY6G,aAAM,EAANA,EAAQ7G,YAVfsD,EAWL,QAII,C","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Blog/Cards/ArticleCard.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/Blog/CategoriesMenu/styles.js","webpack://headless-gatsby-multilang/./src/components/Layout/Blog/CategoriesMenu/index.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/Hero/styles.js","webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/functions/formatDateTime.js","webpack://headless-gatsby-multilang/./src/hooks/useFormattedDate.js","webpack://headless-gatsby-multilang/./src/templates/BlogRoot.jsx"],"sourcesContent":["import { useFormattedDate } from '../../../../hooks/useFormattedDate';\r\n\r\nimport {\r\n  CardLink,\r\n  CategoryBox,\r\n  ContentWrapper,\r\n  PostTitle,\r\n  Date,\r\n  Excerpt,\r\n  AuthorCtaContainer,\r\n  AuthorContainer,\r\n  AuthorImg,\r\n  artDirectedCardImgs,\r\n  CardImgContainer,\r\n  CardImg,\r\n} from './styles';\r\n\r\nexport const ArticleCard = ({\r\n  recordId,\r\n  date,\r\n  title,\r\n  excerpt,\r\n  authorImg,\r\n  authorName,\r\n  category,\r\n  cardImg,\r\n  cardImgMobile,\r\n  altImg,\r\n}) => {\r\n  const images = artDirectedCardImgs(cardImg, cardImgMobile);\r\n\r\n  const { formattedDate } = useFormattedDate(date);\r\n\r\n  return (\r\n    <article>\r\n      <CardLink recordId={recordId}>\r\n        <CardImgContainer>\r\n          <CardImg objectFit=\"cover\" image={images} alt={altImg || ''} />\r\n        </CardImgContainer>\r\n        <ContentWrapper>\r\n          {category && <CategoryBox>{category.title}</CategoryBox>}\r\n          <Date>{formattedDate}</Date>\r\n          <PostTitle>{title}</PostTitle>\r\n          <Excerpt>{excerpt}</Excerpt>\r\n          <AuthorCtaContainer>\r\n            <AuthorContainer>\r\n              <AuthorImg\r\n                objectFit=\"cover\"\r\n                image={authorImg || ''}\r\n                alt={authorName || ''}\r\n              />\r\n              <Date as=\"address\">{authorName}</Date>\r\n            </AuthorContainer>\r\n          </AuthorCtaContainer>\r\n        </ContentWrapper>\r\n      </CardLink>\r\n    </article>\r\n  );\r\n};\r\n","import styled, { css } from 'styled-components';\r\n\r\nimport { Navigator } from '../../../Navigator';\r\n\r\nconst divider = 'var(--borderSmall) solid var(--dividerColor);';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: var(--globalContainer);\r\n  padding: 0 var(--globalPaddingLr) var(--borderRegular) var(--globalPaddingLr);\r\n  margin: auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  --scrollBarHeight: 6px;\r\n  position: relative;\r\n  border-top: ${divider};\r\n  border-bottom: ${divider};\r\n\r\n  &::after {\r\n    position: absolute;\r\n    content: '';\r\n    width: var(--gapXL);\r\n    z-index: 2;\r\n    display: block;\r\n    height: calc(100% - calc(var(--scrollBarHeight) * 2));\r\n    top: 0;\r\n\r\n    ${({ isRtl }) =>\r\n      isRtl\r\n        ? css`\r\n            left: 0;\r\n            background: linear-gradient(\r\n              to left,\r\n              var(--backgroundTransparentColor) 25%,\r\n              var(--backgroundColor) 75%\r\n            );\r\n          `\r\n        : css`\r\n            right: 0;\r\n            background: linear-gradient(\r\n              to right,\r\n              var(--backgroundTransparentColor) 25%,\r\n              var(--backgroundColor) 75%\r\n            );\r\n          `}\r\n  }\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  width: var(--globalContainer);\r\n  padding: var(--gapRegular) 0\r\n    calc(var(--gapRegular) - calc(var(--scrollBarHeight) / 2)) 0;\r\n  overflow: auto;\r\n  scrollbar-width: thin;\r\n  scrollbar-color: var(--dividerColor) var(--transparent);\r\n  width: 100%;\r\n  max-width: var(--globalContainer);\r\n\r\n  &::-webkit-scrollbar {\r\n    height: var(--scrollBarHeight);\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: var(--backgroundColorAlt);\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: var(--dividerColor);\r\n    border-radius: var(--scrollBarHeight);\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  width: min-content;\r\n  column-gap: var(--gapXL);\r\n\r\n  & li:last-of-type > a {\r\n    z-index: 3;\r\n  }\r\n`;\r\n\r\nconst CategoryLink = styled(Navigator)`\r\n  color: var(--headingsColor);\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  position: relative;\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      color: var(--primaryColor);\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Wrapper, Container, Nav, NavList, CategoryLink };\r\n","import { graphql, useStaticQuery } from 'gatsby';\r\n\r\nimport { useTextDirection } from '../../../../hooks/useTextDirection';\r\nimport { usePageLocale } from '../../../../hooks/usePageLocale';\r\n\r\nimport { Wrapper, Container, Nav, NavList, CategoryLink } from './styles';\r\n\r\nexport const CategoriesMenu = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allDatoCmsCategory(filter: { noTranslate: { ne: true } }) {\r\n        categoryNodes: nodes {\r\n          id: originalId\r\n          locale\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const {\r\n    allDatoCmsCategory: { categoryNodes },\r\n  } = data;\r\n\r\n  const { pageLocale } = usePageLocale();\r\n  const { isRtl } = useTextDirection();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container isRtl={isRtl}>\r\n        <Nav>\r\n          <NavList>\r\n            {categoryNodes\r\n              .filter(({ locale }) => locale === pageLocale)\r\n              .map(({ id, title }) => (\r\n                <li key={title}>\r\n                  <CategoryLink recordId={id} activeClassName=\"activeClassLink\">\r\n                    {title}\r\n                  </CategoryLink>\r\n                </li>\r\n              ))}\r\n          </NavList>\r\n        </Nav>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n  width: 100%;\r\n  display: grid;\r\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\r\n  margin: auto;\r\n  row-gap: var(--gapXL);\r\n  max-width: var(--globalContainer);\r\n  align-items: center;\r\n\r\n  ${({ isFullViewport }) =>\r\n    isFullViewport &&\r\n    css`\r\n      justify-content: center;\r\n      height: 100vh;\r\n\r\n      & > div {\r\n        justify-items: center;\r\n        text-align: center;\r\n      }\r\n    `};\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  row-gap: var(--gapRegular);\r\n  width: 600px;\r\n  height: max-content;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Caption = styled.h2`\r\n  color: var(--primaryColor);\r\n  font-size: var(--baseXL);\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.1em;\r\n  line-height: var(--headingsLineHeight);\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: var(--headingXXL);\r\n  color: var(--headingsColor);\r\n  line-height: var(--headingsLineHeight);\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: var(--headingXL);\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  font-size: var(--baseXL);\r\n  color: var(--baseTextColor);\r\n  line-height: var(--bodyLineHeight);\r\n`;\r\n\r\nexport { Wrapper, TextBox, Caption, Title, Subtitle };\r\n","import { Wrapper, TextBox, Caption, Title, Subtitle } from './styles';\r\n\r\nexport const Hero = ({\r\n  caption,\r\n  title,\r\n  subtitle,\r\n  button,\r\n  sectionChildren,\r\n  isFullViewport,\r\n}) => (\r\n  <Wrapper isFullViewport={isFullViewport}>\r\n    <TextBox>\r\n      {caption && <Caption>{caption}</Caption>}\r\n      <Title>{title}</Title>\r\n      <Subtitle>{subtitle}</Subtitle>\r\n      {button}\r\n    </TextBox>\r\n    {sectionChildren}\r\n  </Wrapper>\r\n);\r\n","const timeOptions = {\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n};\r\n\r\nconst dateOptions = {\r\n  year: 'numeric',\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nconst formatDateTime = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n    ...timeOptions,\r\n  });\r\n\r\nconst formatDate = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n  });\r\n\r\nexport { formatDateTime, formatDate };\r\n","import { useContext } from 'react';\r\n\r\nimport { LocaleContext } from '../components/ContextProviders/LocaleProvider';\r\nimport { formatDate } from '../functions/formatDateTime';\r\n\r\nexport const useFormattedDate = (dateString) => {\r\n  const { pageLocale } = useContext(LocaleContext);\r\n\r\n  const formattedDate = formatDate(dateString, pageLocale);\r\n\r\n  return { formattedDate };\r\n};\r\n","import { graphql } from 'gatsby';\r\n\r\nimport { PageWrapper } from '../components/Layout/PageWrapper';\r\nimport { Hero } from '../components/Layout/Hero';\r\nimport { CategoriesMenu } from '../components/Layout/Blog/CategoriesMenu';\r\nimport { ArticleCard } from '../components/Layout/Blog/Cards/ArticleCard';\r\nimport { SectionGridThreeCols } from '../components/Layout/sharedStyles/sectionStyles';\r\n\r\nconst BlogRootTemplate = ({\r\n  data: {\r\n    datoCmsBlogRoot: {\r\n      hero: [{ heroTitle, heroSubtitle }],\r\n      seo,\r\n    },\r\n    allDatoCmsBlogPost: { blogPostNodes },\r\n  },\r\n  pageContext,\r\n}) => (\r\n  <PageWrapper\r\n    pageData={pageContext}\r\n    seoTitle={seo?.seoTitle}\r\n    seoDescription={seo?.seoDescription}\r\n    seoImage={seo?.seoImage?.seoImageUrl}\r\n    seo\r\n  >\r\n    <Hero title={heroTitle} subtitle={heroSubtitle} />\r\n    <CategoriesMenu />\r\n    <SectionGridThreeCols>\r\n      {blogPostNodes.map(\r\n        ({ id, meta: { updatedAt }, coverImage, title, subtitle, author }) => (\r\n          <ArticleCard\r\n            key={id}\r\n            recordId={id}\r\n            date={updatedAt}\r\n            cardImg={coverImage.gatsbyImageData}\r\n            cardImgMobile={coverImage.squaredImage}\r\n            altImg={title}\r\n            title={title}\r\n            excerpt={subtitle}\r\n            authorImg={author?.picture.gatsbyImageData}\r\n            authorAltImg={author?.authorName}\r\n            authorName={author?.authorName}\r\n          />\r\n        )\r\n      )}\r\n    </SectionGridThreeCols>\r\n  </PageWrapper>\r\n);\r\n\r\nexport default BlogRootTemplate;\r\n\r\n// Main query\r\n\r\nexport const query = graphql`\r\n  query BlogRootQuery($locale: String!) {\r\n    allDatoCmsBlogPost(\r\n      filter: {\r\n        locale: { eq: $locale }\r\n        noTranslate: { ne: true }\r\n        categoryLink: { noTranslate: { ne: true } }\r\n      }\r\n      sort: { order: ASC, fields: meta___updatedAt }\r\n    ) {\r\n      blogPostNodes: nodes {\r\n        locale\r\n        id: originalId\r\n        title\r\n        subtitle\r\n        noTranslate\r\n        meta {\r\n          updatedAt\r\n        }\r\n        categoryLink {\r\n          noTranslate\r\n          title\r\n        }\r\n        coverImage {\r\n          gatsbyImageData(\r\n            width: 300\r\n            height: 120\r\n            placeholder: NONE\r\n            forceBlurhash: false\r\n          )\r\n          squaredImage: gatsbyImageData(\r\n            width: 100\r\n            height: 100\r\n            imgixParams: { ar: \"1\", fit: \"crop\" }\r\n          )\r\n        }\r\n        author {\r\n          authorName: name\r\n          picture {\r\n            gatsbyImageData(height: 30, width: 30, placeholder: NONE)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    datoCmsBlogRoot(locale: { eq: $locale }) {\r\n      locale\r\n      seo {\r\n        seoTitle: title\r\n        seoDescription: description\r\n        seoImage: image {\r\n          seoImageUrl: url\r\n        }\r\n      }\r\n      hero {\r\n        heroTitle\r\n        heroSubtitle\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["ArticleCard","_ref","recordId","date","title","excerpt","authorImg","authorName","category","cardImg","cardImgMobile","altImg","images","artDirectedCardImgs","formattedDate","useFormattedDate","_jsx","children","_jsxs","CardLink","CardImgContainer","CardImg","objectFit","image","alt","ContentWrapper","CategoryBox","Date","PostTitle","Excerpt","AuthorCtaContainer","AuthorContainer","AuthorImg","as","divider","Wrapper","styled","div","withConfig","displayName","componentId","Container","isRtl","css","Nav","nav","NavList","ul","CategoryLink","Navigator","CategoriesMenu","categoryNodes","useStaticQuery","allDatoCmsCategory","pageLocale","usePageLocale","useTextDirection","filter","locale","map","_ref2","id","activeClassName","section","isFullViewport","TextBox","Caption","h2","Title","h1","Subtitle","p","Hero","caption","subtitle","button","sectionChildren","timeOptions","hour","minute","dateOptions","year","month","day","formatDateTime","dateString","contextLocale","toLocaleString","Object","assign","formatDate","useContext","LocaleContext","_seo$seoImage","_ref$data","data","_ref$data$datoCmsBlog","datoCmsBlogRoot","_ref$data$datoCmsBlog3","hero","heroTitle","heroSubtitle","seo","blogPostNodes","allDatoCmsBlogPost","pageContext","PageWrapper","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","SectionGridThreeCols","updatedAt","meta","coverImage","author","gatsbyImageData","squaredImage","picture","authorAltImg"],"sourceRoot":""}